//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LiBackgammon {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LiBackgammon.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @font-face {
        ///    font-family: &apos;Lato&apos;;
        ///    font-style: normal;
        ///    font-weight: 900;
        ///    src: local(&apos;Lato Black&apos;), local(&apos;Lato-Black&apos;), url(http://fonts.gstatic.com/s/lato/v10/BVtM30trf7q_jfqYeHfjtA.woff) format(&apos;woff&apos;);
        ///}
        ///
        ///body, select, input, textarea {
        ///    font-family: &apos;Candara&apos;, &apos;Calibri&apos;, &apos;Tahoma&apos;, &apos;Verdana&apos;, &apos;Arial&apos;, sans-serif;
        ///}
        ///
        ///body {
        ///    margin: 0;
        ///    padding: 0;
        ///    background: hsl(27, 35%, 50%);
        ///    cursor: default;
        ///}
        ///
        ///    body * {
        ///        cursor: inherit;
        ///    }
        ///
        ///    body# [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Css {
            get {
                return ResourceManager.GetString("Css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] Favicon {
            get {
                object obj = ResourceManager.GetObject("Favicon", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LiBackgammon = {
        ///    getHash: function ()
        ///    {
        ///        var values = [];
        ///        var dict = {};
        ///        var hash = window.location.hash.replace(/^#/, &apos;&apos;).split(&apos;/&apos;);
        ///        for (var i = 0; i &lt; hash.length; i++)
        ///            if (hash[i].length)
        ///            {
        ///                if (/^(.*)=(.*)$/.test(hash[i]))
        ///                    dict[RegExp.$1] = RegExp.$2;
        ///                else
        ///                    values.push(hash[i]);
        ///            }
        ///        return { values: values, dict: dict };
        ///    },
        ///
        ///    has [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Js {
            get {
                return ResourceManager.GetString("Js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $(function ()
        ///{
        ///    $(&apos;#newgame-playto&gt;input&apos;).click(function ()
        ///    {
        ///        var curVal = +$(&apos;#newgame-playto&gt;input:checked&apos;).val();
        ///        var newVals = curVal &lt; 3 ? [1, 2, 3, 4, 5] : [Math.max(1, Math.floor(curVal / 2)), curVal - 1, curVal, curVal + 1, curVal * 2];
        ///        for (var i = 0; i &lt; 5; i++)
        ///        {
        ///            $(&apos;#newgame-playto-&apos; + i).val(newVals[i]);
        ///            $(&apos;#newgame-playto-label-&apos; + i + &apos; .text&apos;).text(newVals[i]);
        ///        }
        ///        $(&apos;#newgame-playto-&apos; + newVals.indexOf [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string JsMain {
            get {
                return ResourceManager.GetString("JsMain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $(function ()
        ///{
        ///    var sidebars = [&apos;chat&apos;, &apos;info&apos;, &apos;settings&apos;, &apos;translate&apos;, &apos;translating&apos;];
        ///
        ///    function makeArrow(source, dest)
        ///    {
        ///        var pieceSize = 5; // vw
        ///
        ///        function midPoint(elem)
        ///        {
        ///            var tongue = +elem.data(&apos;tongue&apos;);
        ///            return {
        ///                left: leftFromTongue(tongue) + pieceSize / 2,
        ///                top: topFromTongue(tongue, +elem.data(&apos;index&apos;), +elem.data(&apos;num&apos;)) + pieceSize / 2
        ///            };
        ///        }
        ///
        ///        var srcPos = midPoi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string JsPlay {
            get {
                return ResourceManager.GetString("JsPlay", resourceCulture);
            }
        }
    }
}
