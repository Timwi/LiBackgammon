@font-face {
    font-family: 'Lato';
    font-style: normal;
    font-weight: 900;
    src: local('Lato Black'), local('Lato-Black'), url(http://fonts.gstatic.com/s/lato/v10/BVtM30trf7q_jfqYeHfjtA.woff) format('woff');
}

body {
    font-family: "Candara", "Calibri", "Tahoma", "Verdana", "Arial", sans-serif;
    margin: 0;
    padding: 0;
    background: hsl(27, 35%, 50%);
    cursor: default;
}

    body * {
        cursor: inherit;
    }

    body#main-page::before {
        content: 'Backgammon';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        text-align: center;
        font-size: 10vw;
        color: hsl(32, 50%, 20%);
        text-shadow: .2vw .2vw .5vw rgba(0,0,0,.2);
        font-weight: bold;
        z-index: 1;
    }

#newgame, #waiting-games {
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    border: 1vw solid hsl(32, 50%, 30%);
    background: hsl(32, 50%, 70%);
    box-shadow: .4vw .4vw .5vw rgba(0,0,0,.3);
    position: absolute;
    top: 10vw;
}

    #newgame::after, #waiting-games::after {
        position: absolute;
        left: 0;
        top: -5.25vw;
        font-size: 5vw;
        color: hsl(32, 50%, 80%);
        text-shadow: .2vw .2vw .5vw rgba(0, 0, 0, .2);
        font-weight: bold;
    }

#newgame {
    width: 58%;
    border-top-width: 7vw;
    padding: 2vw 4vw;
    left: 1%;
}

    #newgame::after {
        content: 'New game';
    }

    #newgame > .row {
        text-align: center;
        margin-bottom: 2vw;
    }

        #newgame > .row:last-child {
            margin-bottom: 0;
        }

        #newgame > .row > input {
            display: none;
        }

        #newgame > .row > label {
            position: relative;
            display: inline-block;
            padding: 1vw;
            margin-right: 1vw;
            border-radius: 1vw;
            box-shadow: .1vw .1vw .1vw rgba(255, 255, 255, .3) inset, -.1vw -.1vw .1vw rgba(0, 0, 0, .2) inset;
        }

    #newgame > #newgame-playas > label {
        vertical-align: top;
    }

        #newgame > #newgame-playas > label::after {
            display: block;
            content: '';
        }

        #newgame > #newgame-playas > label.random::before {
            content: 'Play as white or black at random.';
            width: 11vw;
        }

        #newgame > #newgame-playas > label.white::before {
            content: 'Play as white.';
        }

        #newgame > #newgame-playas > label.black::before {
            content: 'Play as black.';
        }

    #newgame > .row > input:checked + label {
        background-image: linear-gradient(180deg, hsl(32, 50%, 45%), hsl(32, 50%, 55%));
        border-color: hsl(32, 50%, 80%);
        box-shadow: .1vw .1vw .1vw rgba(0, 0, 0, .5) inset, -.1vw -.1vw .1vw rgba(255, 255, 255, .7) inset;
    }

    #newgame > #newgame-playto > label {
        font-family: "Roboto Light", "Calibri";
        font-size: 3.5vw;
        padding: .2em .5em;
        margin-right: 1vw;
    }

        #newgame > #newgame-playto > label::before {
            content: 'Decide how many points to play to. The first player to reach this many points wins the match.';
            line-height: 1.2em;
        }

    #newgame > #newgame-cube > label {
        padding: .2em .75em;
        font-size: 2vw;
    }

    #newgame > #newgame-cube > #newgame-cube-label-None::after {
        content: 'None';
    }

    #newgame > #newgame-cube > #newgame-cube-label-None::before {
        content: 'No doubling cube in this match.';
    }

    #newgame > #newgame-cube > #newgame-cube-label-Standard::after {
        content: 'Standard';
    }

    #newgame > #newgame-cube > #newgame-cube-label-Standard::before {
        content: 'Use the doubling cube in every game of this match.';
    }

    #newgame > #newgame-cube > #newgame-cube-label-Crawford::after {
        content: 'Crawford';
    }

    #newgame > #newgame-cube > #newgame-cube-label-Crawford::before {
        content: 'Crawford rule: Use the doubling cube in all games except the first game in which either player has one less than the winning number of points.';
    }

    #newgame > #newgame-visibility > label {
        padding: .2em .75em;
        font-size: 1.5vw;
        border-radius: .7vw;
    }

    #newgame > #newgame-visibility > #newgame-visibility-label-Public::after {
        content: 'Public';
    }

    #newgame > #newgame-visibility > #newgame-visibility-label-Public::before {
        content: 'Anyone can join the game.';
    }

    #newgame > #newgame-visibility > #newgame-visibility-label-InviteOnly::after {
        content: 'Invite only';
    }

    #newgame > #newgame-visibility > #newgame-visibility-label-InviteOnly::before {
        content: 'Only people you explicitly send the link to can join the game. Public users can only spectate.';
    }

    #newgame > .row > label::before, #waiting-games > li > .doubling-cube::before {
        width: 15vw;
        top: 100%;
        left: -.2vw;
        margin-top: .2vw;
    }

    #newgame > #newgame-playas > label::before {
        width: 7vw;
    }

    #newgame > #newgame-submit {
        font-size: 2vw;
    }

        #newgame > #newgame-submit > #newgame-submit-btn::before {
            content: 'Start a new game';
        }

#waiting-games {
    width: 39%;
    border-top-width: 7vw;
    margin: 0;
    padding: 0;
    right: 1%;
}

    #waiting-games::after {
        content: 'Join a game';
    }

    #waiting-games.connecting::after {
        content: 'Connecting...';
    }

    #waiting-games:empty::before {
        color: hsl(32, 50%, 30%);
        content: 'No games waiting!\A Start a game of your own :)';
        display: block;
        font-size: 2vw;
        padding: 2vw 3vw;
        text-align: center;
        white-space: pre-wrap;
    }

    #waiting-games.loading:empty::before {
        content: 'Loading...';
    }

    #waiting-games > li {
        list-style: none;
        padding: .5vw 1vw;
        cursor: pointer;
        position: relative;
    }

        #waiting-games > li:hover {
            background: hsl(32, 70%, 80%);
        }

        #waiting-games > li > .piece {
            float: left;
            position: relative;
        }

            #waiting-games > li > .piece::before {
                top: 100%;
                left: -.2vw;
                margin-top: .5vw;
                white-space: nowrap;
            }

        #waiting-games > li > .playto {
            float: right;
            font-family: "Roboto Light", "Calibri";
            font-size: 3.5vw;
            position: relative;
        }

        #waiting-games > li > .doubling-cube {
            position: absolute;
            left: 50%;
            top: 50%;
            font-size: 2vw;
            -moz-transform: translate(-50%, -50%);
            -ms-transform: translate(-50%, -50%);
            -o-transform: translate(-50%, -50%);
            -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
        }

            #waiting-games > li > .doubling-cube.None::after {
                content: 'no doubling cube';
            }

            #waiting-games > li > .doubling-cube.None::before {
                content: 'This match will be played without the doubling cube.';
            }

            #waiting-games > li > .doubling-cube.Standard::after {
                content: 'standard doubling cube';
            }

            #waiting-games > li > .doubling-cube.Standard::before {
                content: 'Every game of this match will be played with the doubling cube.';
            }

            #waiting-games > li > .doubling-cube.Crawford::after {
                content: 'Crawford rule';
            }

            #waiting-games > li > .doubling-cube.Crawford::before {
                content: 'Crawford rule: The doubling cube is used in all games except the first game in which either player has one less than the winning number of points.';
            }

        #waiting-games > li > .playto::before {
            font-family: "Candara", "Calibri", "Tahoma", "Verdana", "Arial", sans-serif;
            content: 'The number of points to play to. The first player to reach this many points wins the match.';
            width: 15vw;
            top: 100%;
            right: -.2vw;
            margin-top: -.2vw;
        }

        #waiting-games > li > .piece.white::before {
            content: 'You will be playing white.';
        }

        #waiting-games > li > .piece.black::before {
            content: 'You will be playing black.';
        }

        #waiting-games > li > .piece.random::before {
            content: 'You will play white or black at random.';
        }

        #waiting-games > li::after {
            content: '';
            display: block;
            clear: both;
        }

#main {
    position: absolute;
    background: hsl(32, 50%, 30%);
    left: 0;
    top: 0;
    width: 100vw;
    height: 68vw;
    box-shadow: .6vw .6vw 1vw rgba(0,0,0,.5);
}

    #main > *, #main > *:not(.dialog) > * {
        position: absolute;
    }

    #main > #board {
        left: 2vw;
        top: 10vw;
        width: 98vw;
        height: 58vw;
    }

        #main > #board > .overlay {
            background: hsl(32, 50%, 30%);
        }

            #main > #board > .overlay#overlay-bottom {
                top: 56vw;
                left: 0;
                width: 96vw;
                height: 2vw;
            }

            #main > #board > .overlay#overlay-right {
                top: 0;
                right: 0;
                width: 2vw;
                height: 58vw;
            }

        #main > #board > .background {
            background: hsl(32, 50%, 70%);
        }

        #main > #board > .shadow {
            box-shadow: .3vw .3vw .5vw rgba(0, 0, 0, .3) inset;
        }

        #main > #board > .main-area {
            width: 42vw;
            height: 56vw;
            top: 0;
        }

            #main > #board > .main-area.left {
                left: 0;
            }

            #main > #board > .main-area.right {
                right: 10vw;
            }

        #main > #board > .home {
            width: 6vw;
            height: 27vw;
            left: 90vw;
        }

            #main > #board > .home.white {
                top: 0;
            }

            #main > #board > .home.black {
                bottom: 2vw;
            }

            #main > #board > .home.selectable {
                background: hsla(110,70%,70%,.5);
            }

        #main > #board > .tongue {
            width: 0;
            height: 0;
            border: none;
            border-left: 3.5vw solid transparent !important;
            border-right: 3.5vw solid transparent !important;
            /* Firefox-specific fix for smooth anti-aliased triangles */
            -moz-transform: scale(1.0001);
        }

            #main > #board > .tongue.top {
                top: 0;
                border-top-width: 25vw;
                border-top-style: solid;
            }

            #main > #board > .tongue.bottom {
                bottom: 2vw;
                border-bottom-width: 25vw;
                border-bottom-style: solid;
            }

            #main > #board > .tongue.dark:not(.selectable) {
                border-color: hsl(27.1, 33.3%, 54.9%);
            }

            #main > #board > .tongue.light:not(.selectable) {
                border-color: hsl(36.6, 66.7%, 82.5%);
            }

            #main > #board > .tongue.selectable {
                border-color: hsla(110,70%,70%,.7);
            }

        #main > #board > .tongue-0, #main > #board > .tongue-23 {
            left: 81vw;
        }

        #main > #board > .tongue-1, #main > #board > .tongue-22 {
            left: 74vw;
        }

        #main > #board > .tongue-2, #main > #board > .tongue-21 {
            left: 67vw;
        }

        #main > #board > .tongue-3, #main > #board > .tongue-20 {
            left: 60vw;
        }

        #main > #board > .tongue-4, #main > #board > .tongue-19 {
            left: 53vw;
        }

        #main > #board > .tongue-5, #main > #board > .tongue-18 {
            left: 46vw;
        }

        #main > #board > .tongue-6, #main > #board > .tongue-17 {
            left: 35vw;
        }

        #main > #board > .tongue-7, #main > #board > .tongue-16 {
            left: 28vw;
        }

        #main > #board > .tongue-8, #main > #board > .tongue-15 {
            left: 21vw;
        }

        #main > #board > .tongue-9, #main > #board > .tongue-14 {
            left: 14vw;
        }

        #main > #board > .tongue-10, #main > #board > .tongue-13 {
            left: 7vw;
        }

        #main > #board > .tongue-11, #main > #board > .tongue-12 {
            left: 0;
        }

        #main > #board > .automove, #main > #board > .automove.home {
            border-left: 3.5vw solid hsla(110,70%,70%,.6);
            border-top: 1.5vw solid transparent;
            border-bottom: 1.5vw solid transparent;
            width: 0;
            height: 0;
            border-radius: 1.5vw;
            margin-left: -.5vw;
        }

            #main > #board > .automove.prison {
                left: 42.25vw;
            }

            #main > #board > .automove.top, #main > #board > .automove.white.home, #main > #board > .automove.black.prison {
                top: 1vw;
            }

            #main > #board > .automove.bottom, #main > #board > .automove.black.home, #main > #board > .automove.white.prison {
                bottom: 3vw;
            }

    #main.player-black > #board > .automove.top,
    #main.player-white > #board > .automove.bottom {
        border-right: 3.5vw solid hsla(110,70%,70%,.6);
        border-left: none;
    }

        #main.player-white > #board > .automove.bottom.target,
        #main.player-white > #board > .automove.top.source,
        #main.player-black > #board > .automove.bottom.source,
        #main.player-black > #board > .automove.top.target {
            margin-left: 4vw;
        }

    #main > #board > .piece, #main > #win > .piece, #main > #joinable > form > #join::before,
    #main > #infobar > .infobox > .piece, #main > #infobar > .infobox > .infobox-inner > .piece,
    #newgame > #newgame-playas > label::after, #waiting-games > li > .piece {
        width: 5vw;
        height: 5vw;
        border-radius: 100%;
    }

        #main > #board > .piece.white,
        #main.state-Black.state-Waiting > #joinable > form > #join::before,
        #main.state-White.state-Won > #win > .piece,
        #main.player-white > #infobar > #info-player > .piece,
        #main.state-White > #infobar > #info-state > .piece,
        #main > #infobar > .infobox > .infobox-white > .piece,
        #newgame > #newgame-playas > label.white::after,
        #waiting-games > li > .piece.white {
            background-image: linear-gradient(135deg, hsl(32, 50%, 90%), hsl(32, 50%, 100%));
            box-shadow: .2vw .2vw .1vw hsl(32, 50%, 100%) inset, -.2vw -.2vw .1vw hsl(32, 50%, 90%) inset, .3vw .3vw .5vw rgba(0, 0, 0, .3);
        }

            #main > #board > .piece.white.selected {
                background-image: linear-gradient(135deg, hsl(0, 100%, 85%), hsl(0, 100%, 90%));
                box-shadow: .2vw .2vw .1vw hsl(0, 100%, 90%) inset, -.2vw -.2vw .1vw hsl(0, 100%, 85%) inset, .3vw .3vw .5vw rgba(0, 0, 0, .3);
            }

        #main > #board > .piece.black,
        #main.state-White.state-Waiting > #joinable > form > #join::before,
        #main.state-Black.state-Won > #win > .piece,
        #main.player-black > #infobar > #info-player > .piece,
        #main.state-Black > #infobar > #info-state > .piece,
        #main > #infobar > .infobox > .infobox-black > .piece,
        #newgame > #newgame-playas > label.black::after,
        #waiting-games > li > .piece.black {
            background-image: linear-gradient(135deg, hsl(32, 50%, 5%), hsl(32, 50%, 15%));
            box-shadow: .2vw .2vw .1vw hsl(32, 50%, 15%) inset, -.2vw -.2vw .1vw hsl(32, 50%, 5%) inset, .3vw .3vw .5vw rgba(0, 0, 0, .3);
        }

            #main > #board > .piece.black.selected {
                background-image: linear-gradient(135deg, hsl(0, 100%, 20%), hsl(0, 100%, 30%));
                box-shadow: .2vw .2vw .1vw hsl(0, 100%, 30%) inset, -.2vw -.2vw .1vw hsl(0, 100%, 20%) inset, .3vw .3vw .5vw rgba(0, 0, 0, .3);
            }

        #main.state-Random > #joinable > form > #join::before,
        #main.player-random > #infobar > #info-player > .piece,
        #main.state-Random.state-Waiting > #infobar > #info-state > .piece,
        #newgame > #newgame-playas > label.random::after,
        #waiting-games > li > .piece.random {
            box-shadow: .2vw .2vw .1vw hsl(32, 50%, 70%) inset, -.2vw -.2vw .1vw hsl(32, 50%, 60%) inset, .3vw .3vw .5vw rgba(0, 0, 0, .3);
            background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="583" height="1000"><path style="fill:hsl(32, 50%, 10%)" d="M 303 34 C 300 34 297 34 294 34 L 294 169 C 295 169 296 169 298 169 331 169 358 180 379 201 399 222 410 249 410 281 410 313 400 340 380 361 L 294 448 294 680 366 680 366 621 C 366 587 373 560 389 541 395 534 403 525 413 515 423 505 435 494 449 480 464 467 475 456 484 447 492 438 505 424 521 403 550 368 564 325 564 273 564 198 540 139 491 97 443 55 380 34 303 34 z M 294 776 294 968 C 294 968 294 968 295 968 322 968 345 958 365 939 384 920 394 898 394 871 394 845 384 822 364 804 344 785 321 776 294 776 z"/><path style="fill:hsl(32, 50%, 90%)" d="M 294 34 C 221 36 160 58 110 100 59 143 29 204 20 281 L 177 281 C 181 247 193 220 215 200 237 180 263 170 294 169 L 294 34 z M 294 448 285 456 C 257 484 239 506 231 523 223 540 219 566 219 600 L 219 680 294 680 294 448 z M 293 776 C 266 776 243 785 223 804 204 823 194 846 194 873 194 899 204 921 224 940 244 958 267 968 294 968 L 294 776 C 294 776 293 776 293 776 z"/></svg>'),linear-gradient(135deg, hsl(32, 50%, 60%), hsl(32, 50%, 70%));
            background-repeat: no-repeat;
            background-position: 50% 50%;
            background-size: contain;
        }

        #main > #board > .piece.selectable::before {
            position: absolute;
            left: 0;
            top: 0;
            right: 0;
            bottom: 0;
            background: hsl(110, 50%, 50%);
            border-radius: 100%;
            content: '';
            opacity: .3;
            -moz-animation: selectable-blink 1s ease-in-out 0s infinite alternate;
            -o-animation: selectable-blink 1s ease-in-out 0s infinite alternate;
            -webkit-animation: selectable-blink 1s ease-in-out 0s infinite alternate;
            animation: selectable-blink 1s ease-in-out 0s infinite alternate;
        }

        #main > #board > .piece.selectable.selected::before {
            display: none;
        }

        #main > #board > .piece.hypo-target {
            opacity: .5;
            -moz-animation: hypo-blink 1s ease-in-out 0s infinite alternate;
            -o-animation: hypo-blink 1s ease-in-out 0s infinite alternate;
            -webkit-animation: hypo-blink 1s ease-in-out 0s infinite alternate;
            animation: hypo-blink 1s ease-in-out 0s infinite alternate;
            pointer-events: none;
        }

    #main.player-white.state-White.state-ToMove > #board > .piece.white,
    #main.player-black.state-Black.state-ToMove > #board > .piece.black,
    #main > #board > .automove {
        cursor: pointer;
    }

    #main > #board > .dice-back {
        border-radius: 1vw;
        width: 6vw;
        height: 6vw;
        top: 25vw;
        font-family: 'Lato';
        text-align: right;
        text-transform: uppercase;
        white-space: nowrap;
        pointer-events: none;
        opacity: 0;
        -moz-transition: opacity .2s ease-in-out;
        -o-transition: opacity .2s ease-in-out;
        -webkit-transition: opacity .2s ease-in-out;
        transition: opacity .2s ease-in-out;
    }

        #main > #board > .dice-back#dice-back-white {
            left: 60.5vw;
            background-image: linear-gradient(135deg, hsl(32, 50%, 90%), hsl(32, 50%, 100%));
        }

        #main > #board > .dice-back#dice-back-black {
            left: 67.5vw;
            background-image: linear-gradient(135deg, hsl(32, 50%, 0%), hsl(32, 50%, 20%));
        }

    #main.dice-start:not(.resigning) > #board > .dice-back {
        opacity: .5;
    }

    #main.dice-start.state-White > #board > #dice-back-white::before,
    #main.dice-start.state-White > #board > #dice-back-white::after {
        position: absolute;
        color: hsl(32, 50%, 95%);
        padding-right: .6vw;
        right: 100%;
    }

    #main.dice-start.state-Black > #board > #dice-back-black::before,
    #main.dice-start.state-Black > #board > #dice-back-black::after {
        position: absolute;
        color: hsl(32, 50%, 10%);
        padding-left: .6vw;
        left: 100%;
    }

    #main.dice-start.state-White > #board > #dice-back-white::before,
    #main.dice-start.state-Black > #board > #dice-back-black::before {
        font-size: 2.2vw;
        top: .8vw;
    }

    #main.dice-start.state-White > #board > #dice-back-white::after,
    #main.dice-start.state-Black > #board > #dice-back-black::after {
        font-size: 1.3vw;
        bottom: .8vw;
        content: 'starts';
    }

    #main.dice-start.state-White > #board > #dice-back-white::before {
        content: 'white';
    }

    #main.dice-start.state-Black > #board > #dice-back-black::before {
        content: 'black';
    }

    #main > #board > .dice {
        left: 61vw;
        top: 25.5vw;
        width: 5vw;
        height: 5vw;
        box-shadow: .3vw .3vw .5vw rgba(0, 0, 0, .3);
        background-image: linear-gradient(135deg, #fff, #ddd);
        border-radius: .5vw;
        opacity: 0;
        pointer-events: none;
        -moz-transition: opacity .2s ease-in-out;
        -o-transition: opacity .2s ease-in-out;
        -webkit-transition: opacity .2s ease-in-out;
        transition: opacity .2s ease-in-out;
    }

        #main > #board > .dice > .razor {
            position: absolute;
            left: 0;
            top: 0;
            right: 0;
            bottom: 0;
            overflow: hidden;
            border-radius: inherit;
        }

            #main > #board > .dice > .razor > .face {
                position: absolute;
                background-image: linear-gradient(135deg, #ddd, #fff);
                left: .5vw;
                top: .5vw;
                width: 4vw;
                height: 4vw;
                border-radius: 30%;
            }

            #main > #board > .dice > .razor > .side {
                position: absolute;
                border-radius: 50%;
                width: 5vw;
                height: 1vw;
            }

                #main > #board > .dice > .razor > .side.n {
                    top: -.5vw;
                    left: .25vw;
                    background-image: linear-gradient(0deg, #fff, #ccc);
                }

                #main > #board > .dice > .razor > .side.w {
                    top: .25vw;
                    left: -.5vw;
                    width: 1vw;
                    height: 5vw;
                    background-image: linear-gradient(-90deg, #fff, #ccc);
                }

                #main > #board > .dice > .razor > .side.s {
                    bottom: -.5vw;
                    left: .25vw;
                    background-image: linear-gradient(0deg, #888, #eee);
                }

                #main > #board > .dice > .razor > .side.e {
                    top: .25vw;
                    right: -.5vw;
                    width: 1vw;
                    height: 5vw;
                    background-image: linear-gradient(-90deg, #888, #eee);
                }

        #main > #board > .dice > .pip {
            position: absolute;
            background: black;
            border-radius: 50%;
            width: .7vw;
            height: .7vw;
            box-shadow: .075vw .075vw 0 white;
        }

            #main > #board > .dice > .pip.a, #main > #board > .dice > .pip.b, #main > #board > .dice > .pip.c {
                left: 1vw;
            }

            #main > #board > .dice > .pip.g {
                left: 2.2vw;
            }

            #main > #board > .dice > .pip.b, #main > #board > .dice > .pip.e, #main > #board > .dice > .pip.g {
                top: 2.2vw;
            }

            #main > #board > .dice > .pip.d, #main > #board > .dice > .pip.e, #main > #board > .dice > .pip.f {
                right: 1vw;
            }

            #main > #board > .dice > .pip.a, #main > #board > .dice > .pip.d {
                top: 1vw;
            }

            #main > #board > .dice > .pip.c, #main > #board > .dice > .pip.f {
                bottom: 1vw;
            }

        #main > #board > .dice.val-1 .pip.a, #main > #board > .dice.val-1 .pip.b, #main > #board > .dice.val-1 .pip.c, #main > #board > .dice.val-1 .pip.d, #main > #board > .dice.val-1 .pip.e, #main > #board > .dice.val-1 .pip.f, #main > #board > .dice.val-2 .pip.b, #main > #board > .dice.val-2 .pip.c,
        #main > #board > .dice.val-2 .pip.d, #main > #board > .dice.val-2 .pip.e, #main > #board > .dice.val-2 .pip.g, #main > #board > .dice.val-3 .pip.a, #main > #board > .dice.val-3 .pip.b, #main > #board > .dice.val-3 .pip.e, #main > #board > .dice.val-3 .pip.f, #main > #board > .dice.val-4 .pip.b,
        #main > #board > .dice.val-4 .pip.e, #main > #board > .dice.val-4 .pip.g, #main > #board > .dice.val-5 .pip.b, #main > #board > .dice.val-5 .pip.e, #main > #board > .dice.val-6 .pip.g {
            display: none;
        }

        #main > #board > .dice > .cross {
            position: absolute;
            left: 50%;
            top: 50%;
            height: 8vw;
            font-size: 8vw;
            font-weight: bold;
            color: hsl(0, 80%, 50%);
            line-height: 1;
            opacity: 0;
            -moz-transition: opacity ease-in-out .2s;
            -o-transition: opacity ease-in-out .2s;
            -webkit-transition: opacity ease-in-out .2s;
            transition: opacity ease-in-out .2s;
        }

            #main > #board > .dice > .cross::after {
                position: relative;
                left: -50%;
                top: -50%;
                content: '✗';
            }

        #main > #board > .dice.crossed > .cross {
            opacity: .8;
        }

    #main.dice-2:not(.resigning) > #board > #dice-0, #main.dice-2:not(.resigning) > #board > #dice-1, #main.dice-4:not(.resigning) > #board > .dice {
        opacity: .5;
    }

    #main.dice-2 > #board > #dice-1, #main.dice-4 > #board > #dice-2 {
        left: 68vw;
    }

    #main.dice-4 > #board > #dice-0 {
        left: 54vw;
    }

    #main.dice-4 > #board > #dice-3 {
        left: 75vw;
    }

    #main.player-white.state-White.state-ToMove.dice-2:not(.resigning) > #board > #dice-0,
    #main.player-white.state-White.state-ToMove.dice-2:not(.resigning) > #board > #dice-1,
    #main.player-white.state-White.state-ToMove.dice-4:not(.resigning) > #board > .dice,
    #main.player-white.state-White.state-ToMove.dice-start:not(.resigning) > #board > .dice-back,
    #main.player-black.state-Black.state-ToMove.dice-2:not(.resigning) > #board > #dice-0,
    #main.player-black.state-Black.state-ToMove.dice-2:not(.resigning) > #board > #dice-1,
    #main.player-black.state-Black.state-ToMove.dice-4:not(.resigning) > #board > .dice,
    #main.player-black.state-Black.state-ToMove.dice-start:not(.resigning) > #board > .dice-back {
        opacity: 1;
    }

    #main > #board > #cube {
        background-image: linear-gradient(135deg, #e8e8e8, #f0f0f0);
        border-radius: .5vw;
        width: 4.8vw;
        height: 4.8vw;
        box-shadow: .2vw .2vw .05vw white inset, -.2vw -.2vw .05vw #ccc inset, .3vw .3vw .5vw rgba(0, 0, 0, .3);
        left: 41.6vw;
        top: 25.6vw;
    }

        #main > #board > #cube > .inner {
            position: absolute;
            left: 50%;
            top: 50%;
            font-family: "Roboto Light", "Calibri";
            font-size: 3.5vw;
            line-height: 3.75vw;
            height: 4vw;
        }

            #main > #board > #cube > .inner > #cube-text {
                position: relative;
                left: -50%;
                top: -50%;
                color: #222;
                text-shadow: .075vw .075vw 0 white;
            }

    #main.no-cube > #board > #cube {
        display: none;
    }

    #main.cube-white > #board > #cube {
        top: 2.3vw;
    }

    #main.cube-black > #board > #cube {
        top: 48.9vw;
    }

    #main > #board > .arrow {
        pointer-events: none;
        height: 2.5vw;
        background: #dd5;
    }

        #main > #board > .arrow::before {
            position: absolute;
            right: -6.25vw;
            top: -1.25vw;
            width: 0;
            height: 0;
            border: 2.5vw solid transparent;
            border-left: 4.0625vw solid #dd5;
            content: '';
        }

    #main > #board > button {
        height: 4vw;
        top: 26vw;
        width: 11vw;
        pointer-events: none;
        opacity: 0;
        -moz-transition: opacity ease-in-out .2s;
        -o-transition: opacity ease-in-out .2s;
        -webkit-transition: opacity ease-in-out .2s;
        transition: opacity ease-in-out .2s;
    }

    #main > #board > #commit {
        font-size: 1.8vw;
        left: 9vw;
    }

        #main > #board > #commit::before {
            content: 'Commit';
        }

    #main > #board > #undo {
        font-size: 2vw;
        left: 22vw;
    }

        #main > #board > #undo::before {
            content: 'Undo';
        }

    #main > #board > #accept {
        font-size: 1.8vw;
        left: 9vw;
    }

        #main > #board > #accept::before {
            content: 'Accept';
        }

    #main > #board > #reject {
        font-size: 1.8vw;
        left: 22vw;
    }

        #main > #board > #reject::before {
            content: 'Reject';
        }

    #main > #board > #roll, #main > #board > #resign-confirm {
        font-size: 2vw;
        left: 55vw;
    }

        #main > #board > #roll::before {
            content: 'Roll';
        }

        #main > #board > #resign-confirm::before {
            content: 'Resign';
        }

    #main > #board > #double {
        font-size: 1.8vw;
        left: 68vw;
    }

        #main > #board > #double::before {
            content: 'Double';
        }

    #main > #board > #resign-cancel {
        font-size: 2vw;
        left: 68vw;
    }

        #main > #board > #resign-cancel::before {
            content: 'Cancel';
        }

    #main.state-ToRoll:not(.resigning) > #board > #roll,
    #main.state-ToRoll:not(.resigning) > #board > #double,
    #main.state-ToConfirmDouble:not(.resigning) > #board > #accept,
    #main.state-ToConfirmDouble:not(.resigning) > #board > #reject {
        opacity: .5;
    }

    #main.undoable:not(.resigning) > #board > #undo,
    #main.committable:not(.resigning) > #board > #commit,
    #main.player-white.state-White.state-ToRoll:not(.resigning) > #board > #roll,
    #main.player-black.state-Black.state-ToRoll:not(.resigning) > #board > #roll,
    #main.player-white.state-White.state-ToRoll:not(.resigning) > #board > #double,
    #main.player-black.state-Black.state-ToRoll:not(.resigning) > #board > #double,
    #main.player-white.state-White.state-ToConfirmDouble:not(.resigning) > #board > #accept,
    #main.player-black.state-Black.state-ToConfirmDouble:not(.resigning) > #board > #accept,
    #main.player-white.state-White.state-ToConfirmDouble:not(.resigning) > #board > #reject,
    #main.player-black.state-Black.state-ToConfirmDouble:not(.resigning) > #board > #reject,
    #main.resigning > #board > #resign-confirm,
    #main.resigning > #board > #resign-cancel {
        pointer-events: all;
        opacity: 1;
    }

    #main > #board > #info {
        pointer-events: none;
        opacity: 0;
        -moz-transition: opacity ease-in-out .5s, transform linear 2s;
        -o-transition: opacity ease-in-out .5s, transform linear 2s;
        -webkit-transition: opacity ease-in-out .5s, transform linear 2s;
        transition: opacity ease-in-out .5s, transform linear 2s;
        position: absolute;
        left: 0vw;
        top: 28vw;
        width: 42vw;
        text-align: center;
        font-size: 5vw;
        font-weight: bold;
        font-style: italic;
        -moz-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
        -o-transform: translateY(-50%);
        -webkit-transform: translateY(-50%);
        transform: translateY(-50%);
        color: hsl(32, 50%, 20%);
        text-shadow: .1vw .1vw .1vw hsl(32, 50%, 80%);
    }

    #main.auto-0 > #board > #info, #main.auto-1 > #board > #info, #main.resigning > #board > #info {
        opacity: 1;
        -moz-transform: translateY(-50%) scale(1.5);
        -ms-transform: translateY(-50%) scale(1.5);
        -o-transform: translateY(-50%) scale(1.5);
        -webkit-transform: translateY(-50%) scale(1.5);
        transform: translateY(-50%) scale(1.5);
    }

        #main.auto-0 > #board > #info::before {
            content: 'No moves';
        }

        #main.auto-1 > #board > #info::before {
            content: 'Forced move';
        }

        #main.resigning > #board > #info::before {
            content: 'Resign?';
        }

    #main.state-ToConfirmDouble > #board > #info {
        left: 47vw;
        opacity: 1;
    }

        #main.state-ToConfirmDouble > #board > #info::before {
            content: 'Double?';
        }

    #main > #connecting {
        position: absolute;
        color: hsl(0, 100%, 75%);
        font-size: 1vw;
        font-weight: bold;
        top: 8.3vw;
        right: 10vw;
        display: none;
    }

        #main > #connecting::before {
            content: 'Reconnecting...';
        }

    #main.connecting > #connecting {
        display: block;
    }

    #main > .dialog {
        opacity: 0;
        pointer-events: none;
        top: 36vw;
        left: 15vw;
        right: 15vw;
        border: .7vw solid hsl(32, 50%, 20%);
        background: hsl(32, 50%, 70%);
        padding: 0 3vw;
        box-shadow: .3vw .3vw .5vw rgba(0, 0, 0, .3);
        color: hsl(32, 50%, 30%);
        -moz-transform: translateY(-50%) scale(.5);
        -ms-transform: translateY(-50%) scale(.5);
        -o-transform: translateY(-50%) scale(.5);
        -webkit-transform: translateY(-50%) scale(.5);
        transform: translateY(-50%) scale(.5);
        -moz-transition: transform 1s ease-out, opacity 1s ease-in-out;
        -o-transition: transform 1s ease-out, opacity 1s ease-in-out;
        -webkit-transition: transform 1s ease-out, opacity 1s ease-in-out;
        transition: transform 1s ease-out, opacity 1s ease-in-out;
    }

        #main > .dialog > p, #main > .dialog > form {
            text-align: center;
            font-size: 1.8vw;
            margin: 2vw 0;
        }

            #main > .dialog > p.link, #main > .dialog > form {
                background: hsl(32, 50%, 90%);
                padding: 1vw 0;
                font-weight: bold;
            }

            #main > .dialog > p.link {
                font-family: monospace;
            }

    #main > #win > .win {
        margin: 3vw 0;
    }

        #main > #win > .win::before {
            display: block;
            background: hsl(32, 50%, 90%);
            padding: .2vw 0;
            font-size: 5vw;
        }

        #main > #win > .win::after {
            display: block;
            padding: .2vw 0 0;
            margin-bottom: -1.25vw;
            font-size: 2vw;
        }

    #main > #win > .piece {
        position: absolute;
        top: 3.7vw;
        left: 4.2vw;
    }

    #main > #win > .points {
        position: absolute;
        right: 4vw;
        text-align: right;
        top: 3.25vw;
    }

        #main > #win > .points > .number {
            font-family: "Roboto Light", "Calibri";
            font-size: 4vw;
            line-height: 4vw;
            margin: 0;
        }

        #main > #win > .points > .word {
            font-size: 1.5vw;
            line-height: 1.5vw;
            margin: 0;
        }

        #main > #win > .points.singular > .word::before {
            content: 'point';
        }

        #main > #win > .points.plural > .word::before {
            content: 'points';
        }

    #main > #win > #next-game > button {
        display: none;
        margin-right: 1vw;
    }

        #main > #win > #next-game > button#goto-next-game::before {
            content: 'Go to next game';
        }

        #main > #win > #next-game > button#offer-rematch::before {
            content: 'Offer a rematch';
        }

        #main > #win > #next-game > button#accept-rematch::before {
            content: 'Accept';
        }

        #main > #win > #next-game > button#cancel-rematch::before {
            content: 'Cancel';
        }

    #main > #joinable > form > #join::before {
        position: absolute;
        content: '';
        top: 50%;
        -moz-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
        -o-transform: translateY(-50%);
        -webkit-transform: translateY(-50%);
        transform: translateY(-50%);
    }

    #main > #joinable > form > #join::after {
        padding-left: 6vw;
    }

    #main.state-Black > #joinable > form > #join::after {
        content: 'Join as White';
    }

    #main.state-White > #joinable > form > #join::after {
        content: 'Join as Black';
    }

    #main.state-Random > #joinable > form > #join::after {
        content: 'Join (random color)';
    }

    #main.state-White.state-Waiting.player-white > #waiting,
    #main.state-Black.state-Waiting.player-black > #waiting,
    #main.state-Random.state-Waiting.player-random > #waiting,
    #main.state-Waiting.spectating > #joinable,
    #main.state-Won > #win {
        opacity: 1;
        pointer-events: all;
        -moz-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
        -o-transform: translateY(-50%);
        -webkit-transform: translateY(-50%);
        transform: translateY(-50%);
    }

    #main.has-next-game > #win > #next-game > button#goto-next-game,
    #main.rematch-White.player-black > #win > #next-game > button#accept-rematch,
    #main.rematch-Black.player-white > #win > #next-game > button#accept-rematch,
    #main.rematch-White.player-black > #win > #next-game > button#cancel-rematch,
    #main.rematch-Black.player-white > #win > #next-game > button#cancel-rematch,
    #main.end-of-match:not(.rematch-White):not(.rematch-Black):not(.rematch-WhiteRejected):not(.rematch-BlackRejected):not(.rematch-Accepted):not(.spectating) > #win > #next-game > button#offer-rematch,
    #main:not(.in-match):not(.rematch-White):not(.rematch-Black):not(.rematch-WhiteRejected):not(.rematch-BlackRejected):not(.rematch-Accepted):not(.spectating) > #win > #next-game > button#offer-rematch,
    #main.rematch-WhiteRejected.player-white > #win > #next-game > button#offer-rematch,
    #main.rematch-BlackRejected.player-black > #win > #next-game > button#offer-rematch {
        display: inline;
    }

    #main.rematch-White > #win > #next-game > #next-game-text,
    #main.rematch-Black > #win > #next-game > #next-game-text,
    #main.rematch-Accepted > #win > #next-game > #next-game-text {
        margin-right: 1.5vw;
    }

    #main.rematch-White:not(.player-white) > #win > #next-game > #next-game-text::before {
        content: 'White is offering a rematch.';
    }

    #main.rematch-Black:not(.player-black) > #win > #next-game > #next-game-text::before {
        content: 'Black is offering a rematch.';
    }

    #main.rematch-White.player-white > #win > #next-game > #next-game-text::before,
    #main.rematch-Black.player-black > #win > #next-game > #next-game-text::before {
        content: 'Rematch offer sent.';
    }

    #main.rematch-Accepted > #win > #next-game > #next-game-text::before {
        content: 'Rematch is on.';
    }

    #main.rematch-WhiteRejected:not(.player-white) > #win > #next-game > #next-game-text::before {
        content: 'White refuses a rematch.';
    }

    #main.rematch-BlackRejected:not(.player-black) > #win > #next-game > #next-game-text::before {
        content: 'Black refuses a rematch.';
    }

    #main > #waiting > #send-this-link::before {
        content: 'Send the following link to your friend to allow them to join the game:';
    }

    #main > #waiting > #game-will-begin::before {
        content: 'The game will begin when the other player joins the game.';
    }

    #main > #joinable > #player-waiting::before {
        content: 'The player is waiting for an opponent to play with.';
    }

    #main.state-Won.state-White > #win > .win::before {
        content: 'White wins';
    }

    #main.state-Won.state-White.end-of-match > #win > .win::before {
        content: 'White is victorious';
    }

    #main.state-Won.state-Black > #win > .win::before {
        content: 'Black wins';
    }

    #main.state-Won.state-Black.end-of-match > #win > .win::before {
        content: 'Black is victorious';
    }

    #main.state-White.state-RejectedDouble > #win > .win::after {
        content: 'Black rejected a double.';
    }

    #main.state-Black.state-RejectedDouble > #win > .win::after {
        content: 'White rejected a double.';
    }

    #main.state-White.state-Resignation > #win > .win::after {
        content: 'Black resigned.';
    }

    #main.state-Black.state-Resignation > #win > .win::after {
        content: 'White resigned.';
    }

    #main > #infobar {
        height: 6vw;
        left: 2vw;
        top: 2vw;
        width: 96vw;
    }

        #main > #infobar > .infobox {
            background: hsl(32, 50%, 70%);
            position: absolute;
            top: 0;
            height: 6vw;
        }

            #main > #infobar > .infobox > .piece, #main > #infobar > .infobox > .infobox-inner > .piece {
                position: absolute;
                top: .5vw;
            }

            #main > #infobar > .infobox#info-player > .piece, #main > #infobar > .infobox#info-state > .piece {
                left: .9vw;
            }

            #main > #infobar > .infobox > .infobox-inner {
                position: absolute;
                top: 0;
                bottom: 0;
                width: 15vw;
                overflow: hidden;
            }

                #main > #infobar > .infobox > .infobox-inner.infobox-white {
                    left: 0;
                }

                    #main > #infobar > .infobox > .infobox-inner.infobox-white > .piece {
                        right: -2.5vw;
                    }

                #main > #infobar > .infobox > .infobox-inner.infobox-black {
                    right: 0;
                }

                    #main > #infobar > .infobox > .infobox-inner.infobox-black > .piece {
                        left: -2.5vw;
                    }

                #main > #infobar > #info-player::before, #main > #infobar > #info-player::after,
                #main > #infobar > #info-state::before, #main > #infobar > #info-state::after,
                #main > #infobar > .infobox > .infobox-inner > .number {
                    position: absolute;
                    color: hsl(32, 50%, 30%);
                    font-family: 'Lato';
                    text-transform: uppercase;
                    white-space: pre;
                }

        #main > #infobar > #info-player::before {
            left: 7vw;
            top: .5vw;
            font-size: 1.3vw;
            line-height: 1.3vw;
        }

        #main > #infobar > #info-player::after {
            left: 7vw;
            bottom: .5vw;
            font-size: 3.4vw;
            line-height: 3.4vw;
        }

        #main > #infobar > #info-state::before {
            left: 7vw;
            top: .5vw;
            font-size: 3.4vw;
            line-height: 3.4vw;
        }

        #main > #infobar > #info-state::after {
            left: 7vw;
            bottom: .5vw;
            font-size: 1.3vw;
            line-height: 1.3vw;
        }

        #main > #infobar > .infobox > .infobox-inner > .number {
            top: 3vw;
            -moz-transform: translateY(-50%);
            -ms-transform: translateY(-50%);
            -o-transform: translateY(-50%);
            -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
            font-size: 4vw;
            line-height: 4vw;
            text-shadow: .3vw .3vw .5vw rgba(0, 0, 0, .3);
        }

        #main > #infobar > .infobox > .infobox-inner::after {
            text-transform: uppercase;
            position: absolute;
            top: 3vw;
            font-family: 'Lato';
        }

        #main > #infobar > .infobox > .infobox-white::after {
            right: 0;
            -moz-transform: translateX(50%) translateY(-50%);
            -ms-transform: translateX(50%) translateY(-50%);
            -o-transform: translateX(50%) translateY(-50%);
            -webkit-transform: translateX(50%) translateY(-50%);
            transform: translateX(50%) translateY(-50%);
            color: hsl(32, 50%, 10%);
        }

        #main > #infobar > .infobox > .infobox-black::after {
            left: 0;
            -moz-transform: translateX(-50%) translateY(-50%);
            -ms-transform: translateX(-50%) translateY(-50%);
            -o-transform: translateX(-50%) translateY(-50%);
            -webkit-transform: translateX(-50%) translateY(-50%);
            transform: translateX(-50%) translateY(-50%);
            color: hsl(32, 50%, 95%);
        }

        #main > #infobar > .infobox > .infobox-white > .number {
            right: 3.5vw;
            color: hsl(32, 50%, 95%);
        }

        #main > #infobar > .infobox > .infobox-black > .number {
            left: 3.5vw;
            color: hsl(32, 50%, 10%);
        }

        #main > #infobar > .infobox#info-player {
            left: 0;
            width: 27vw;
        }

        #main > #infobar > .infobox#info-state {
            left: 29vw;
            width: 27vw;
        }

        #main > #infobar > .infobox#info-pips {
            left: 58vw;
            width: 30vw;
        }

        #main > #infobar > .infobox#info-match {
            left: 90vw;
            width: 30vw;
        }

    #main.in-match > #infobar > .infobox#info-player {
        left: 0;
        width: 19vw;
    }

    #main.in-match > #infobar > .infobox#info-state {
        left: 21vw;
        width: 19vw;
    }

    #main.in-match > #infobar > .infobox#info-pips {
        left: 42vw;
        width: 22vw;
    }

    #main.in-match > #infobar > .infobox#info-match {
        left: 66vw;
        width: 22vw;
    }

    #main.in-match > #infobar > .infobox > .infobox-inner {
        width: 11vw;
    }

    #main.spectating > #infobar > #info-player::before, #main.spectating > #infobar > #info-player::after {
        font-size: 2.4vw;
        line-height: 2.4vw;
        left: 50%;
        -moz-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
        -o-transform: translateX(-50%);
        -webkit-transform: translateX(-50%);
        transform: translateX(-50%);
    }

    #main:not(.spectating) > #infobar > #info-player::before {
        content: 'You are playing';
    }

    #main.player-white > #infobar > #info-player::after {
        content: 'white';
    }

    #main.player-black > #infobar > #info-player::after {
        content: 'black';
    }

    #main.player-random > #infobar > #info-player::after {
        content: '?';
    }

    #main.spectating > #infobar > #info-player > .piece {
        display: none;
    }

    #main.spectating > #infobar > #info-player::before {
        content: 'You are';
    }

    #main.spectating > #infobar > #info-player::after {
        content: 'spectating';
    }

    #main.state-White > #infobar > #info-state::before {
        content: 'White';
    }

    #main.state-Black > #infobar > #info-state::before {
        content: 'Black';
    }

    #main.state-Random > #infobar > #info-state::before {
        content: '?';
    }

    #main.state-Waiting > #infobar > #info-state::after {
        content: 'waiting';
    }

    #main.state-ToRoll > #infobar > #info-state::after {
        content: 'to roll';
    }

    #main.state-ToConfirmDouble > #infobar > #info-state::after {
        content: 'to confirm';
    }

    #main.state-ToMove > #infobar > #info-state::after {
        content: 'to play';
    }

    #main.state-White.state-ToMove:not(.online-White) > #infobar > #info-state,
    #main.state-White.state-ToRoll:not(.online-White) > #infobar > #info-state,
    #main.state-Black.state-ToMove:not(.online-Black) > #infobar > #info-state,
    #main.state-Black.state-ToRoll:not(.online-Black) > #infobar > #info-state {
        opacity: .5;
    }

        #main.state-White.state-ToMove:not(.online-White) > #infobar > #info-state::after,
        #main.state-White.state-ToRoll:not(.online-White) > #infobar > #info-state::after,
        #main.state-Black.state-ToMove:not(.online-Black) > #infobar > #info-state::after,
        #main.state-Black.state-ToRoll:not(.online-Black) > #infobar > #info-state::after {
            content: 'is offline';
        }

    #main.state-Won > #infobar > #info-state::after {
        content: 'wins';
    }

    #main > #infobar > #info-pips::before, #main > #infobar > #info-match::before {
        width: 16vw;
        top: 6.1vw;
        left: 50%;
        -moz-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
        -o-transform: translateX(-50%);
        -webkit-transform: translateX(-50%);
        transform: translateX(-50%);
    }

    #main > #infobar > .mini-button::before {
        white-space: nowrap;
        top: 1.5vw;
        right: -1.25vw;
    }

    #main > #infobar > #info-pips::before {
        content: 'Shows the sum of how many steps all of your pieces are away from home.';
    }

    #main > #infobar > #info-match::before {
        content: 'Shows your score within the current match.';
    }

    #main > #infobar > #info-pips > .infobox-inner::after {
        content: 'pips';
        font-size: 2vw;
    }

    #main > #infobar > #info-match > .infobox-inner::after {
        content: 'match';
        font-size: 1.3vw;
    }

    #main > #infobar > .mini-button {
        position: absolute;
        width: 0;
        height: 0;
        left: 91.25vw;
        top: 1.25vw;
        border-radius: 100%;
    }

        #main:not(.state-Won) > #infobar > .mini-button:hover:not(:active):not(:focus), #main > #infobar > .mini-button:not(#resign):hover:not(:active):not(:focus) {
            box-shadow: 0 0 3vw 1vw rgba(0, 0, 0, .5);
        }

        #main > #infobar > .mini-button:focus:not(:active) {
            outline: none;
            box-shadow: 0 0 3vw 1vw rgba(0, 0, 0, .5);
        }

        #main > #infobar > .mini-button:active {
            outline: none;
            box-shadow: 0 0 2vw 1vw rgba(0, 0, 0, 1);
            margin: .1vw 0 0 .1vw;
        }

        #main > #infobar > .mini-button::after {
            content: '';
            position: absolute;
            left: -1.25vw;
            top: -1.25vw;
            right: -1.25vw;
            bottom: -1.25vw;
            background-position: center center;
            background-size: contain;
            background-repeat: no-repeat;
        }

        #main > #infobar > .mini-button#chat, #main > #infobar > .mini-button#settings {
            left: 94.75vw;
        }

        #main > #infobar > .mini-button#resign, #main > #infobar > .mini-button#settings {
            top: 4.75vw;
        }

        #main > #infobar > .mini-button#help::after {
            background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="1000" height="1000"><path style="fill:%23d9b58c" d="M 582 745 410 745 C 409 720 409 705 409 700 409 644 418 598 437 562 455 526 492 485 548 440 603 395 636 366 647 352 664 330 672 306 672 279 672 242 657 210 628 184 598 158 558 145 508 145 460 145 420 158 388 186 355 213 333 255 321 311 L 146 290 C 151 209 186 141 249 85 313 28 397 0 500 0 609 0 696 29 760 86 825 142 857 209 857 284 857 326 845 366 822 403 798 441 747 492 670 556 630 589 605 616 595 636 586 657 581 693 582 745 z M 410 1000 410 811 600 811 600 1000 z"/></svg>');
        }

        #main > #infobar > .mini-button#chat::after {
            background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="1000" height="1000"><path style="fill:%23d9b58c" d="M 1000 351 C 1000 448 944 535 854 599 809 631 755 656 695 674 665 683 634 690 601 694 557 859 411 979 251 1000 356 957 407 817 399 694 367 689 335 683 305 674 246 656 192 630 146 599 56 535 0 447 0 351 0 157 224 0 500 0 776 0 1000 157 1000 351 z"/></svg>');
        }

        #main > #infobar > .mini-button#resign::after {
            background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="1000" height="1000"><path style="fill:%23d9b58c" d="M 100 0 0 25 225 1000 300 975 211 539 C 244 510 301 475 375 475 525 475 525 550 525 550 525 550 525 600 550 600 591 600 662 550 750 550 875 550 900 625 900 625 L 1000 175 C 1000 175 925 100 775 100 625 100 575 125 575 125 575 125 600 25 375 25 288 25 177 61 117 83 z"/></svg>');
        }

        #main > #infobar > .mini-button#settings::after {
            background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="1000" height="1000"><path style="fill:%23d9b58c" d="M 778 0 C 720 0 662 21 618 65 C 553 131 536 226 568 307 L 308 567 C 227 534 131 551 66 616 C 10 672 -10 748 4 819 L 172 652 L 312 687 L 313 688 L 348 829 L 181 996 C 252 1010 329 990 384 935 C 449 869 466 773 433 692 L 692 433 C 774 466 871 450 937 384 C 992 328 1012 252 998 181 L 831 348 L 689 313 L 654 172 L 822 4 C 807 1 792 0 778 0 z"/></svg>');
        }

        #main > #infobar > .mini-button#help::before {
            content: 'Rules and help';
        }

        #main > #infobar > .mini-button#help:hover::after, #main > #infobar > .mini-button#help:active::after, #main > #infobar > .mini-button#help:focus::after {
            background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="1000" height="1000"><path style="fill:%23f0d9b5" d="M 582 745 410 745 C 409 720 409 705 409 700 409 644 418 598 437 562 455 526 492 485 548 440 603 395 636 366 647 352 664 330 672 306 672 279 672 242 657 210 628 184 598 158 558 145 508 145 460 145 420 158 388 186 355 213 333 255 321 311 L 146 290 C 151 209 186 141 249 85 313 28 397 0 500 0 609 0 696 29 760 86 825 142 857 209 857 284 857 326 845 366 822 403 798 441 747 492 670 556 630 589 605 616 595 636 586 657 581 693 582 745 z M 410 1000 410 811 600 811 600 1000 z"/></svg>');
        }

        #main > #infobar > .mini-button#chat::before {
            content: 'Chat';
        }

        #main > #infobar > .mini-button#chat:hover::after, #main > #infobar > .mini-button#chat:active::after, #main > #infobar > .mini-button#chat:focus::after {
            background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="1000" height="1000"><path style="fill:%23f0d9b5" d="M 1000 351 C 1000 448 944 535 854 599 809 631 755 656 695 674 665 683 634 690 601 694 557 859 411 979 251 1000 356 957 407 817 399 694 367 689 335 683 305 674 246 656 192 630 146 599 56 535 0 447 0 351 0 157 224 0 500 0 776 0 1000 157 1000 351 z"/></svg>');
        }

        #main > #infobar > .mini-button#settings::before {
            content: 'Settings';
        }

        #main > #infobar > .mini-button#settings:hover::after, #main > #infobar > .mini-button#settings:active::after, #main > #infobar > .mini-button#settings:focus::after {
            background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="1000" height="1000"><path style="fill:%23f0d9b5" d="M 778 0 C 720 0 662 21 618 65 C 553 131 536 226 568 307 L 308 567 C 227 534 131 551 66 616 C 10 672 -10 748 4 819 L 172 652 L 312 687 L 313 688 L 348 829 L 181 996 C 252 1010 329 990 384 935 C 449 869 466 773 433 692 L 692 433 C 774 466 871 450 937 384 C 992 328 1012 252 998 181 L 831 348 L 689 313 L 654 172 L 822 4 C 807 1 792 0 778 0 z"/></svg>');
        }

    #main:not(.state-Won):not(.state-Waiting):not(.spectating) > #infobar > .mini-button#resign::before {
        content: 'Resign this game';
    }

    #main:not(.state-Won) > #infobar > .mini-button#resign:hover::after, #main:not(.state-Won) > #infobar > .mini-button#resign:active::after, #main:not(.state-Won) > #infobar > .mini-button#resign:focus::after {
        background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="1000" height="1000"><path style="fill:%23f0d9b5" d="M 100 0 0 25 225 1000 300 975 211 539 C 244 510 301 475 375 475 525 475 525 550 525 550 525 550 525 600 550 600 591 600 662 550 750 550 875 550 900 625 900 625 L 1000 175 C 1000 175 925 100 775 100 625 100 575 125 575 125 575 125 600 25 375 25 288 25 177 61 117 83 z"/></svg>');
    }

    #main.state-Waiting > #infobar > .mini-button#resign,
    #main.state-Won > #infobar > .mini-button#resign,
    #main.spectating > #infobar > .mini-button#resign {
        opacity: .2;
    }

    #main.with-sidebar {
        width: 130vw;
    }

        #main.with-sidebar > .dialog {
            right: 45vw;
        }

        #main.with-sidebar > #sidebar {
            left: 100vw;
            top: 0;
            bottom: 0;
            right: 0;
        }

            #main.with-sidebar > #sidebar > #sidebar-chat {
                left: 0vw;
                right: 2vw;
                top: 2vw;
                bottom: 2vw;
                background: hsl(32, 50%, 90%);
                box-shadow: .3vw .3vw .5vw rgba(0, 0, 0, .3) inset;
            }

button {
    position: relative;
    background-color: hsl(32, 52%, 34.3%);
    background-image: linear-gradient(hsl(32, 52%, 44%), hsl(32, 52%, 22%));
    border: .15vw solid;
    border-color: hsl(32, 52%, 30%) hsl(32, 52%, 20%) hsl(32, 52%, 20%) hsl(32, 52%, 30%);
    border-radius: .6vw;
    box-shadow: .05vw .1vw 0 0 hsl(32, 52%, 48%) inset;
    color: hsl(32, 90%, 92.5%);
    font: inherit;
    padding: .2em 1em;
    text-align: center;
    text-shadow: -.1vw -.1vw 0 hsl(32, 52%, 24.3%);
    text-transform: uppercase;
    white-space: nowrap;
}

    button:hover, button:active, button:focus {
        background-color: hsl(32, 52%, 44.3%);
        background-image: linear-gradient(hsl(32, 52%, 54%), hsl(32, 52%, 32%));
        border: .15vw solid;
        border-color: hsl(32, 52%, 40%) hsl(32, 52%, 30%) hsl(32, 52%, 30%) hsl(32, 52%, 40%);
        border-radius: .6vw;
        box-shadow: .05vw .1vw 0 0 hsl(32, 52%, 58%) inset;
        color: white;
        font: inherit;
        text-align: center;
        text-shadow: -.1vw -.1vw 0 hsl(32, 52%, 34.3%);
        text-transform: uppercase;
        white-space: nowrap;
    }

    button:active {
        background-image: linear-gradient(hsl(32, 52%, 32%), hsl(32, 52%, 54%));
    }

.shortcut {
    opacity: 0;
    pointer-events: none;
    -moz-transition: opacity .5s ease-in-out;
    -o-transition: opacity .5s ease-in-out;
    -webkit-transition: opacity .5s ease-in-out;
    transition: opacity .5s ease-in-out;
    position: absolute;
    left: 0;
    bottom: 100%;
    background: hsl(220, 50%, 80%);
    border: .1vw solid hsl(220, 50%, 20%);
    text-transform: uppercase;
    padding: 0 .2vw;
    z-index: 1;
    text-shadow: none;
    color: hsl(220, 50%, 20%);
    font-size: 1.5vw;
}

body.show-shortcuts .shortcut {
    opacity: 1;
}

/* Tooltips */
#main > #infobar > #info-pips::before, #main > #infobar > #info-match::before, #main > #infobar > .mini-button::before,
#newgame > .row > label::before, #waiting-games > li > .doubling-cube::before, #waiting-games > li > .playto::before, #waiting-games > li > .piece::before {
    opacity: 0;
    pointer-events: none;
    -moz-transition: opacity .1s ease-in-out;
    -o-transition: opacity .1s ease-in-out;
    -webkit-transition: opacity .1s ease-in-out;
    transition: opacity .1s ease-in-out;
    position: absolute;
    background: hsl(32, 50%, 80%);
    padding: .2vw 1vw;
    font-size: 1.1vw;
    color: hsl(32, 50%, 20%);
    border: .2vw solid hsl(32, 50%, 20%);
    border-radius: .5vw;
    box-shadow: .1vw .1vw .2vw rgba(0, 0, 0, .5);
    text-align: center;
    z-index: 1;
}

#main > #infobar > #info-pips:hover::before, #main > #infobar > #info-match:hover::before, #main > #infobar > .mini-button:hover::before,
#newgame > .row > label:hover::before, #waiting-games > li > .doubling-cube:hover::before, #waiting-games > li > .playto:hover::before, #waiting-games > li > .piece:hover::before {
    opacity: 1;
}

@keyframes hypo-blink {
    from {
        opacity: .9;
    }

    to {
        opacity: .7;
    }
}

@keyframes selectable-blink {
    from {
        opacity: .3;
    }

    to {
        opacity: .1;
    }
}
